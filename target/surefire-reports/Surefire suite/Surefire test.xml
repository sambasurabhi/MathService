<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="LAPTOP-BHNKGPVU" name="Surefire test" tests="63" failures="12" timestamp="13 Oct 2016 01:28:21 GMT" time="15.103" errors="0">
  <testcase name="testOverflow" time="0.63" classname="xcal.cs.math.AdditionTest">
    <failure type="java.lang.AssertionError" message="Expected exception not thrown">
      <![CDATA[java.lang.AssertionError: Expected exception not thrown
	at xcal.cs.math.AdditionTest.testOverflow(AdditionTest.java:46)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- testOverflow -->
  <testcase name="testOverflow" time="0.01" classname="xcal.cs.math.AdditionTest">
    <failure type="java.lang.AssertionError" message="Expected exception not thrown">
      <![CDATA[java.lang.AssertionError: Expected exception not thrown
	at xcal.cs.math.AdditionTest.testOverflow(AdditionTest.java:46)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- testOverflow -->
  <testcase name="testOverflow" time="0.007" classname="xcal.cs.math.AdditionTest">
    <failure type="java.lang.AssertionError" message="Expected exception not thrown">
      <![CDATA[java.lang.AssertionError: Expected exception not thrown
	at xcal.cs.math.AdditionTest.testOverflow(AdditionTest.java:46)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- testOverflow -->
  <testcase name="testSuccess" time="0.008" classname="xcal.cs.math.AdditionTest"/>
  <testcase name="testSuccess" time="0.008" classname="xcal.cs.math.AdditionTest"/>
  <testcase name="testSuccess" time="0.009" classname="xcal.cs.math.AdditionTest"/>
  <testcase name="testSuccess" time="0.008" classname="xcal.cs.math.AdditionTest"/>
  <testcase name="testSuccess" time="0.018" classname="xcal.cs.math.AdditionTest"/>
  <testcase name="testSuccess" time="0.009" classname="xcal.cs.math.AdditionTest"/>
  <testcase name="testSuccess" time="0.009" classname="xcal.cs.math.AdditionTest"/>
  <testcase name="testSuccess" time="0.008" classname="xcal.cs.math.AdditionTest"/>
  <testcase name="testSuccess" time="0.007" classname="xcal.cs.math.AdditionTest"/>
  <testcase name="testSuccess" time="0.006" classname="xcal.cs.math.AdditionTest"/>
  <testcase name="performanceTest" time="10.386" classname="xcal.cs.math.UnionTest">
    <failure type="org.testng.internal.thread.ThreadTimeoutException" message="Method org.testng.internal.TestNGMethod.performanceTest() didn&amp;apos;t finish within the time-out 10000">
      <![CDATA[org.testng.internal.thread.ThreadTimeoutException: Method org.testng.internal.TestNGMethod.performanceTest() didn't finish within the time-out 10000
	at java.util.AbstractCollection.toString(AbstractCollection.java:464)
	at org.slf4j.helpers.MessageFormatter.safeObjectAppend(MessageFormatter.java:299)
	at org.slf4j.helpers.MessageFormatter.deeplyAppendParameter(MessageFormatter.java:271)
	at org.slf4j.helpers.MessageFormatter.arrayFormat(MessageFormatter.java:233)
	at org.slf4j.helpers.MessageFormatter.arrayFormat(MessageFormatter.java:173)
	at ch.qos.logback.classic.spi.LoggingEvent.getFormattedMessage(LoggingEvent.java:293)
	at ch.qos.logback.classic.spi.LoggingEvent.prepareForDeferredProcessing(LoggingEvent.java:206)
	at ch.qos.logback.core.OutputStreamAppender.subAppend(OutputStreamAppender.java:205)
	at ch.qos.logback.core.OutputStreamAppender.append(OutputStreamAppender.java:100)
	at ch.qos.logback.core.UnsynchronizedAppenderBase.doAppend(UnsynchronizedAppenderBase.java:84)
	at ch.qos.logback.core.spi.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:48)
	at ch.qos.logback.classic.Logger.appendLoopOnAppenders(Logger.java:270)
	at ch.qos.logback.classic.Logger.callAppenders(Logger.java:257)
	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:421)
	at ch.qos.logback.classic.Logger.filterAndLog_0_Or3Plus(Logger.java:383)
	at ch.qos.logback.classic.Logger.info(Logger.java:591)
	at xcal.cs.math.MathController.union(MathController.java:102)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:221)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:688)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:65)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:770)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:167)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:134)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:155)
	at org.springframework.test.web.client.MockMvcClientHttpRequestFactory$1.executeInternal(MockMvcClientHttpRequestFactory.java:67)
	at org.springframework.mock.http.client.MockClientHttpRequest.execute(MockClientHttpRequest.java:93)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:619)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:580)
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:407)
	at xcal.cs.math.UnionTest.performanceTest(UnionTest.java:78)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
... Removed 11 stack frames]]>
    </failure>
  </testcase> <!-- performanceTest -->
  <testcase name="testFailure" time="0.092" classname="xcal.cs.math.UnionTest"/>
  <testcase name="testFailure" time="0.007" classname="xcal.cs.math.UnionTest"/>
  <testcase name="testSuccess" time="2.031" classname="xcal.cs.math.UnionTest"/>
  <testcase name="testSuccess" time="0.01" classname="xcal.cs.math.UnionTest"/>
  <testcase name="testSuccess" time="0.01" classname="xcal.cs.math.UnionTest"/>
  <testcase name="testSuccess" time="0.037" classname="xcal.cs.math.UnionTest"/>
  <testcase name="testSuccess" time="0.009" classname="xcal.cs.math.UnionTest"/>
  <testcase name="testDivideByZero" time="0.126" classname="xcal.cs.math.DivisionTest"/>
  <testcase name="testDivideByZero" time="0.01" classname="xcal.cs.math.DivisionTest"/>
  <testcase name="testDivideByZero" time="0.01" classname="xcal.cs.math.DivisionTest"/>
  <testcase name="testDivideByZero" time="0.009" classname="xcal.cs.math.DivisionTest"/>
  <testcase name="testSuccess" time="0.011" classname="xcal.cs.math.DivisionTest">
    <failure type="java.lang.AssertionError" message="expected [1] but found [0]">
      <![CDATA[java.lang.AssertionError: expected [1] but found [0]
	at xcal.cs.math.DivisionTest.testSuccess(DivisionTest.java:22)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- testSuccess -->
  <testcase name="testSuccess" time="0.008" classname="xcal.cs.math.DivisionTest">
    <failure type="java.lang.AssertionError" message="expected [2] but found [0]">
      <![CDATA[java.lang.AssertionError: expected [2] but found [0]
	at xcal.cs.math.DivisionTest.testSuccess(DivisionTest.java:22)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- testSuccess -->
  <testcase name="testSuccess" time="0.007" classname="xcal.cs.math.DivisionTest">
    <failure type="java.lang.AssertionError" message="expected [1] but found [0]">
      <![CDATA[java.lang.AssertionError: expected [1] but found [0]
	at xcal.cs.math.DivisionTest.testSuccess(DivisionTest.java:22)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- testSuccess -->
  <testcase name="testSuccess" time="0.009" classname="xcal.cs.math.DivisionTest">
    <failure type="java.lang.AssertionError" message="expected [1] but found [0]">
      <![CDATA[java.lang.AssertionError: expected [1] but found [0]
	at xcal.cs.math.DivisionTest.testSuccess(DivisionTest.java:22)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- testSuccess -->
  <testcase name="testSuccess" time="0.008" classname="xcal.cs.math.DivisionTest">
    <failure type="java.lang.AssertionError" message="expected [2] but found [0]">
      <![CDATA[java.lang.AssertionError: expected [2] but found [0]
	at xcal.cs.math.DivisionTest.testSuccess(DivisionTest.java:22)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- testSuccess -->
  <testcase name="testSuccess" time="0.007" classname="xcal.cs.math.DivisionTest"/>
  <testcase name="testSuccess" time="0.008" classname="xcal.cs.math.DivisionTest">
    <failure type="java.lang.AssertionError" message="expected [-2] but found [0]">
      <![CDATA[java.lang.AssertionError: expected [-2] but found [0]
	at xcal.cs.math.DivisionTest.testSuccess(DivisionTest.java:22)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- testSuccess -->
  <testcase name="testSuccess" time="0.006" classname="xcal.cs.math.DivisionTest">
    <failure type="java.lang.AssertionError" message="expected [-2] but found [0]">
      <![CDATA[java.lang.AssertionError: expected [-2] but found [0]
	at xcal.cs.math.DivisionTest.testSuccess(DivisionTest.java:22)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- testSuccess -->
  <testcase name="testSuccess" time="0.007" classname="xcal.cs.math.DivisionTest">
    <failure type="java.lang.AssertionError" message="expected [3] but found [0]">
      <![CDATA[java.lang.AssertionError: expected [3] but found [0]
	at xcal.cs.math.DivisionTest.testSuccess(DivisionTest.java:22)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- testSuccess -->
  <testcase name="testFailure" time="0.027" classname="xcal.cs.math.IntersectTest"/>
  <testcase name="testFailure" time="0.006" classname="xcal.cs.math.IntersectTest"/>
  <testcase name="testSuccess" time="0.011" classname="xcal.cs.math.IntersectTest"/>
  <testcase name="testSuccess" time="0.008" classname="xcal.cs.math.IntersectTest"/>
  <testcase name="testSuccess" time="0.008" classname="xcal.cs.math.IntersectTest"/>
  <testcase name="testSuccess" time="0.007" classname="xcal.cs.math.IntersectTest"/>
  <testcase name="testFailure" time="1.07" classname="xcal.cs.math.MaxTest"/>
  <testcase name="testFailure" time="0.011" classname="xcal.cs.math.MaxTest"/>
  <testcase name="testSuccess" time="0.007" classname="xcal.cs.math.MaxTest"/>
  <testcase name="testSuccess" time="0.006" classname="xcal.cs.math.MaxTest"/>
  <testcase name="testSuccess" time="0.006" classname="xcal.cs.math.MaxTest"/>
  <testcase name="testSuccess" time="0.005" classname="xcal.cs.math.MaxTest"/>
  <testcase name="testSuccess" time="0.006" classname="xcal.cs.math.MaxTest"/>
  <testcase name="testFailure" time="0.022" classname="xcal.cs.math.MinTest"/>
  <testcase name="testFailure" time="0.005" classname="xcal.cs.math.MinTest"/>
  <testcase name="testSuccess" time="0.008" classname="xcal.cs.math.MinTest"/>
  <testcase name="testSuccess" time="0.008" classname="xcal.cs.math.MinTest"/>
  <testcase name="testSuccess" time="0.006" classname="xcal.cs.math.MinTest"/>
  <testcase name="testSuccess" time="0.007" classname="xcal.cs.math.MinTest"/>
  <testcase name="testSuccess" time="0.022" classname="xcal.cs.math.MultiplicationTest"/>
  <testcase name="testSuccess" time="0.008" classname="xcal.cs.math.MultiplicationTest"/>
  <testcase name="testSuccess" time="0.009" classname="xcal.cs.math.MultiplicationTest"/>
  <testcase name="testSuccess" time="0.028" classname="xcal.cs.math.MultiplicationTest"/>
  <testcase name="testSuccess" time="0.008" classname="xcal.cs.math.MultiplicationTest"/>
  <testcase name="testSuccess" time="0.006" classname="xcal.cs.math.MultiplicationTest"/>
  <testcase name="testSuccess" time="0.006" classname="xcal.cs.math.MultiplicationTest"/>
  <testcase name="testSuccess" time="0.006" classname="xcal.cs.math.MultiplicationTest"/>
  <testcase name="testSuccess" time="0.014" classname="xcal.cs.math.MultiplicationTest"/>
  <testcase name="testSuccess" time="0.011" classname="xcal.cs.math.MultiplicationTest"/>
</testsuite> <!-- Surefire test -->
